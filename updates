$os = $env:SystemDrive
Write-Host "NINJA_BITLOCKER: START"     # Marker for N1 log

try {
    $v = Get-BitLockerVolume -MountPoint $os # Grab current Bitlocker state from the OS drive    

    # Output log if it is already encrypted
    if ($v -and $v.ProtectionStatus -eq 1){ # if drive is already encrypted
        Write-Host "NINJA_BITLOCKER: ALREADY_ENCRYPTED"

        # --- CHANGED: look for RecoveryPassword (not RecoveryKey/.bek)
        $existingRP = ($v.KeyProtector | Where-Object { $_.KeyProtectorType -eq 'RecoveryPassword' })
        if (-not $existingRP) {
            Write-Host "NINJA_BITLOCKER: ADDING_RECOVERY_PASSWORD"
            $add = Add-BitLockerKeyProtector -MountPoint $os -RecoveryPasswordProtector

            # Retrieve and log the new recovery password (48-digit)
            $rp = ($add.RecoveryPasswordProtector | Select-Object -ExpandProperty RecoveryPassword)
            if (-not $rp) { 
                # fallback to reading from the volume object if needed
                $v = Get-BitLockerVolume -MountPoint $os
                $rp = ($v.KeyProtector | Where-Object { $_.KeyProtectorType -eq 'RecoveryPassword' } | Select-Object -First 1).RecoveryPassword
            }
            if ($rp) { Write-Host "NINJA_BITLOCKER: RECOVERY_PASSWORD=$rp" }

            # Best effort backup to AAD if applicable
            try {
                $rpId = ($v.KeyProtector | Where-Object { $_.KeyProtectorType -eq 'RecoveryPassword' } | Select-Object -First 1).KeyProtectorId
                if ($rpId) { BackupToAAD-BitLockerKeyProtector -MountPoint $os -KeyProtectorId $rpId | Out-Null }
            } catch {}
        } else {
            Write-Host "NINJA_BITLOCKER: RECOVERY_PASSWORD_EXISTS"
        }

        exit 0
    }

    # Check TPM status 
    # IF a TPM exists, but isn't ready, then initialize if needed using "Initialize-tpm"
    $tpm = Get-Tpm -ErrorAction SilentlyContinue 
    $tpmReady = $false  # Default flag
    if ($tpm -and $tpm.TpmPresent) { # if tpm exists
        if (-not $tpm.TpmReady) { # If TPM is not ready, initialize it
            Initialize-Tpm -ErrorAction SilentlyContinue | Out-Null
            Start-Sleep 2 # pause for 2 seconds
        }
        # Retry TPM state after initialization attempt
        $tpm = Get-Tpm -ErrorAction SilentlyContinue    # Recheck TPM
        $tpmReady = ($tpm -and $tpm.TpmReady)           # Ready flag
    }
    Write-Host "NINJA_BITLOCKER: TPM_READY=$tpmReady" # Output

    if (-not $tpmReady) {
        Write-Error "NINJA_BITLOCKER: TPM not present/ready" # If TPM is not ready, stop
        exit 2 # error code
    }

    # --- CHANGED: enable with TPM + RecoveryPassword to satisfy GPO
    Write-Host "NINJA_BITLOCKER: ENABLE_ATTEMPT (TPM+RecoveryPassword)"
    $op = Enable-BitLocker -MountPoint $os -EncryptionMethod XtsAes256 -UsedSpaceOnly -TpmProtector -RecoveryPasswordProtector

    Start-Sleep 2
    $post = Get-BitlockerVolume -MountPoint $os     # Check post-encryption

    # Best effort backup of the new recovery password to AAD if available
    try {
        $rpId = ($post.KeyProtector | Where-Object { $_.KeyProtectorType -eq 'RecoveryPassword' } | Select-Object -First 1).KeyProtectorId
        if ($rpId) { BackupToAAD-BitLockerKeyProtector -MountPoint $os -KeyProtectorId $rpId | Out-Null }
    } catch {}

    Write-Host "NINJA_BITLOCKER: STATUS=$($post.ProtectionStatus)" # 1 = On
    Write-Host "NINJA_BITLOCKER: ENABLED_OK"     # Log success
    exit 0
}
catch {
    Write-Error ("NINJA_BITLOCKER: ERROR: " + $_.Exception.Message)         # Write any errors, then exit
    exit 1
}
